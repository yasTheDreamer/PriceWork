{"version":3,"sources":["../../../server/routes/index.js"],"names":["router","express","Router","get","req","res","next","headers","origin","process","env","DEV_ORIGIN_DOMAIN","uuid","query","admin","auth","createCustomToken","then","customToken","status","json","token","send","userService","UserServiceImpl","factors","getAllData","post","service","user","session","recordExists","record","getRecord","r","rec","JSON","stringify","parse","address","key","updateRecord","salary","saveUser","module","exports"],"mappings":"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","sourcesContent":["import express from \"express\";\r\n//testing the firebase database insert\r\nimport UserServiceImpl from \"../services/UserServiceImpl\";\r\nimport {\r\n  constructUser,\r\n  updateSessionToken,\r\n  setListing,\r\n} from \"../utils/utilFunctions\";\r\nimport admin from \"../db/dbConnection\";\r\n\r\nimport \"firebase/auth\";\r\n\r\nvar router = express.Router();\r\n\r\n/* GET home page. */\r\n\r\nrouter.get(\"/\", (req, res, next) => {\r\n  if (req.headers.origin == process.env.DEV_ORIGIN_DOMAIN) {\r\n    let uuid = req.query.uuid;\r\n\r\n    if (uuid) {\r\n      admin\r\n        .auth()\r\n        .createCustomToken(`${uuid}`)\r\n        .then((customToken) => {\r\n          res.status(200).json({ token: customToken });\r\n        });\r\n    } else {\r\n      res.status(500).send(\"uuid is not defined\");\r\n    }\r\n  } else {\r\n    res.status(401).send(\"unauthorised to access\");\r\n  }\r\n});\r\n\r\nrouter.get(\"/findAll\", (req, res, next) => {\r\n  const userService = new UserServiceImpl();\r\n  if (req.query.factors) {\r\n    const factors = req.query.factors;\r\n    userService.getAllData(res, factors);\r\n  } else {\r\n    res.status(400).send(\"factors are not defined\");\r\n  }\r\n});\r\n\r\nrouter.post(\"/save\", (req, res, next) => {\r\n  let service = new UserServiceImpl();\r\n\r\n  let user = constructUser(req);\r\n\r\n  if (\r\n    req.session &&\r\n    req.session.token &&\r\n    service.recordExists(req.session.token)\r\n  ) {\r\n    let record = service.getRecord(req.session.token);\r\n    record.then((r) => {\r\n      let rec = JSON.stringify(setListing(r));\r\n      if (rec) {\r\n        rec = JSON.parse(rec);\r\n        if (!rec.address) {\r\n          rec.address = {};\r\n        }\r\n        JSON.stringify(rec);\r\n        user = constructUser(req, rec);\r\n        let key = service.updateRecord(req.session.token, user);\r\n        if (key) res.status(200).send(\"data updated\");\r\n        else res.status(500).send(\"error updating the document \" + key);\r\n      }\r\n    });\r\n  } else if (req.session && !req.session.token && user.salary) {\r\n    let key = service.saveUser(user);\r\n    updateSessionToken(key, req, res);\r\n  } else {\r\n    res.status(500).send(\"data could not be saved\");\r\n  }\r\n});\r\n\r\nmodule.exports = router;\r\n"],"file":"index.js"}
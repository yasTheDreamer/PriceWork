{"version":3,"sources":["../../../server/routes/index.js"],"names":["router","express","Router","get","req","res","next","userService","UserServiceImpl","getAllData","post","service","console","log","session","user","token","recordExists","record","getRecord","then","r","rec","JSON","stringify","address","parse","key","updateRecord","status","send","salary","saveUser","module","exports"],"mappings":"aAAA;;AAEA;AACA,uD,gGAFA;;;;;AAOA,IAAIA,MAAM,GAAGC,oBAAQC,MAAR,EAAb;;AAEA;AACAF,MAAM,CAACG,GAAP,CAAW,UAAX,EAAuB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACzC,MAAMC,WAAW,GAAG,IAAIC,2BAAJ,EAApB;AACAD,EAAAA,WAAW,CAACE,UAAZ,CAAuBJ,GAAvB;AACD,CAHD;;AAKAL,MAAM,CAACU,IAAP,CAAY,OAAZ,EAAqB,UAACN,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACvC,MAAIK,OAAO,GAAG,IAAIH,2BAAJ,EAAd;;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAYT,GAAG,CAACU,OAAhB;AACA,MAAIC,IAAI,GAAG,kCAAcX,GAAd,CAAX;;AAEA;AACEA,EAAAA,GAAG,CAACU,OAAJ;AACAV,EAAAA,GAAG,CAACU,OAAJ,CAAYE,KADZ;AAEAL,EAAAA,OAAO,CAACM,YAAR,CAAqBb,GAAG,CAACU,OAAJ,CAAYE,KAAjC,CAHF;AAIE;AACA,QAAIE,MAAM,GAAGP,OAAO,CAACQ,SAAR,CAAkBf,GAAG,CAACU,OAAJ,CAAYE,KAA9B,CAAb;AACAE,IAAAA,MAAM,CAACE,IAAP,CAAY,UAACC,CAAD,EAAO;AACjB,UAAIC,GAAG,GAAGC,IAAI,CAACC,SAAL,CAAe,+BAAWH,CAAX,CAAf,CAAV;AACA,UAAIC,GAAJ,EAAS;AACP,YAAI,CAACA,GAAG,CAACG,OAAT,EAAkB;AAChBH,UAAAA,GAAG,GAAGC,IAAI,CAACG,KAAL,CAAWJ,GAAX,CAAN;AACAA,UAAAA,GAAG,CAACG,OAAJ,GAAc,EAAd;AACAF,UAAAA,IAAI,CAACC,SAAL,CAAeF,GAAf;AACD;AACDP,QAAAA,IAAI,GAAG,kCAAcX,GAAd,EAAmBkB,GAAnB,CAAP;AACA,YAAIK,GAAG,GAAGhB,OAAO,CAACiB,YAAR,CAAqBxB,GAAG,CAACU,OAAJ,CAAYE,KAAjC,EAAwCD,IAAxC,CAAV;AACA,YAAIY,GAAJ,EAAStB,GAAG,CAACwB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,cAArB,EAAT;AACKzB,QAAAA,GAAG,CAACwB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,iCAAiCH,GAAtD;AACN;AACF,KAbD;AAcD,GApBD,MAoBO,IAAIvB,GAAG,CAACU,OAAJ,IAAe,CAACV,GAAG,CAACU,OAAJ,CAAYE,KAA5B,IAAqCD,IAAI,CAACgB,MAA9C,EAAsD;AAC3D,QAAIJ,GAAG,GAAGhB,OAAO,CAACqB,QAAR,CAAiBjB,IAAjB,CAAV;AACA,2CAAmBY,GAAnB,EAAwBvB,GAAxB,EAA6BC,GAA7B;AACD,GAHM,MAGA;AACLA,IAAAA,GAAG,CAACwB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,yBAArB;AACD;AACF,CAhCD;;AAkCAG,MAAM,CAACC,OAAP,GAAiBlC,MAAjB","sourcesContent":["import express from \"express\";\r\n//testing the firebase database insert\r\nimport UserServiceImpl from \"../services/UserServiceImpl\";\r\nimport {\r\n  constructUser,\r\n  updateSessionToken,\r\n  setListing,\r\n} from \"../utils/utilFunctions\";\r\nvar router = express.Router();\r\n\r\n/* GET home page. */\r\nrouter.get(\"/findAll\", (req, res, next) => {\r\n  const userService = new UserServiceImpl();\r\n  userService.getAllData(res);\r\n});\r\n\r\nrouter.post(\"/save\", (req, res, next) => {\r\n  let service = new UserServiceImpl();\r\n\r\n  console.log(req.session);\r\n  let user = constructUser(req);\r\n\r\n  if (\r\n    req.session &&\r\n    req.session.token &&\r\n    service.recordExists(req.session.token)\r\n  ) {\r\n    let record = service.getRecord(req.session.token);\r\n    record.then((r) => {\r\n      let rec = JSON.stringify(setListing(r));\r\n      if (rec) {\r\n        if (!rec.address) {\r\n          rec = JSON.parse(rec);\r\n          rec.address = {};\r\n          JSON.stringify(rec);\r\n        }\r\n        user = constructUser(req, rec);\r\n        let key = service.updateRecord(req.session.token, user);\r\n        if (key) res.status(200).send(\"data updated\");\r\n        else res.status(500).send(\"error updating the document \" + key);\r\n      }\r\n    });\r\n  } else if (req.session && !req.session.token && user.salary) {\r\n    let key = service.saveUser(user);\r\n    updateSessionToken(key, req, res);\r\n  } else {\r\n    res.status(500).send(\"data could not be saved\");\r\n  }\r\n});\r\n\r\nmodule.exports = router;\r\n"],"file":"index.js"}
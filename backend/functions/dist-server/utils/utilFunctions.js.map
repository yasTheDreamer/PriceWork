{"version":3,"sources":["../../../server/utils/utilFunctions.js"],"names":["filterData","data","factors","filteredData","parsedFactors","JSON","parse","result","isOnlySalary","Object","values","filterResults","salaries","forEach","r","salary","push","min","getMin","max","getMax","averageSalary","total","numberOfResults","Math","getSum","num","round","sum","reduce","length","constructUser","req","us","user","User","body","withSalary","jobTitle","withJobTitle","experience","withYearsOfExperience","email","withEmailAdress","socialLogin1","withSocialInfo1Login","socialLogin2","address","city","withCity","state","withState","zipCode","withZipCode","build","updateSessionToken","key","res","session","token","status","send","setListing","snapshot","currentSnapshot","val","satisfiesFactors","d","b","keys","every","f","element","filter"],"mappings":"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","sourcesContent":["import User from \"../models/User\";\r\n\r\nexport const filterData = (data, factors) => {\r\n  let filteredData = {};\r\n  let parsedFactors = JSON.parse(factors);\r\n  let result = [];\r\n\r\n  if (isOnlySalary(parsedFactors)) {\r\n    result = Object.values(data);\r\n  } else {\r\n    result = filterResults(data, parsedFactors);\r\n  }\r\n\r\n  let salaries = [];\r\n\r\n  result.forEach((r) => {\r\n    if (r.salary) salaries.push(r.salary);\r\n  });\r\n\r\n  filteredData.min = getMin(salaries);\r\n  filteredData.max = getMax(salaries);\r\n  filteredData.averageSalary = averageSalary(salaries);\r\n\r\n  filteredData.total = numberOfResults(result, data, parsedFactors);\r\n\r\n  return filteredData;\r\n};\r\n\r\nexport const getMin = (salaries) => {\r\n  let min = Math.min(...salaries);\r\n  return min;\r\n};\r\n\r\nexport const getMax = (salaries) => {\r\n  let max = Math.max(...salaries);\r\n  return max;\r\n};\r\n\r\nconst getSum = (total, num) => {\r\n  return total + Math.round(num);\r\n};\r\n\r\nexport const averageSalary = (salaries) => {\r\n  let sum;\r\n\r\n  sum = salaries.reduce(getSum, 0);\r\n\r\n  return sum / salaries.length;\r\n};\r\n\r\nexport const constructUser = (req, us) => {\r\n  let user = null;\r\n\r\n  if (us) user = new User(us);\r\n  else user = new User();\r\n\r\n  if (req.body.salary && !user.User.salary) user.withSalary(req.body.salary);\r\n  if (req.body.jobTitle && !user.User.jobTitle)\r\n    user.withJobTitle(req.body.jobTitle);\r\n  if (req.body.experience && !user.User.experience)\r\n    user.withYearsOfExperience(req.body.experience);\r\n  if (req.body.email && !user.User.email) user.withEmailAdress(req.body.email);\r\n  if (req.body.socialLogin1 && !user.User.socialLogin1)\r\n    user.withSocialInfo1Login(req.body.socialLogin1);\r\n  if (req.body.socialLogin2 && !user.User.socialLogin2)\r\n    user.withSocialInfo1Login(req.body.socialLogin2);\r\n  if (req.body.address.city && user.User.address)\r\n    user.withCity(req.body.address.city);\r\n  if (req.body.address.state && user.User.address)\r\n    user.withState(req.body.address.state);\r\n  if (req.body.address.zipCode && user.User.address)\r\n    user.withZipCode(req.body.address.zipCode);\r\n\r\n  return user.build();\r\n};\r\n\r\nexport const updateSessionToken = (key, req, res) => {\r\n  if (key) {\r\n    req.session.token = key;\r\n    res.status(200).send(\"data saved\");\r\n  } else {\r\n    res.status(500).send(\"data could not be saved\");\r\n  }\r\n};\r\n\r\nexport const setListing = (snapshot) => {\r\n  let currentSnapshot;\r\n  currentSnapshot = snapshot.val();\r\n\r\n  return currentSnapshot;\r\n};\r\n\r\n/***\r\n * this function checks that for every\r\n *\r\n */\r\n\r\nconst satisfiesFactors = (d, factors) => {\r\n  let b = false;\r\n\r\n  Object.keys(factors).every((f) => {\r\n    if (f == \"salary\" || f == \"timeStamp\") {\r\n      return true;\r\n    } else if (f == \"address\") {\r\n      return Object.keys(factors[f]).every((element) => {\r\n        if (factors[f][element] && d[f] && d[f][element]) {\r\n          if (factors[f][element] == d[f][element]) {\r\n            b = true;\r\n            return true;\r\n          } else {\r\n            b = false;\r\n            return false;\r\n          }\r\n        } else if (factors[f][element]) {\r\n          b = false;\r\n          return true;\r\n        }\r\n      });\r\n    } else if (d[f] && d[f] == factors[f]) {\r\n      b = true;\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  });\r\n\r\n  return b;\r\n};\r\n\r\nconst numberOfResults = (result, data, factors) => {\r\n  let b = false;\r\n\r\n  /**\r\n   * if salary is the only factor entered by the user\r\n   * then retrun the total of documents in the database\r\n   */\r\n\r\n  if (isOnlySalary(factors)) {\r\n    return Object.values(data).length;\r\n  }\r\n\r\n  return result.length;\r\n};\r\n\r\nfunction isOnlySalary(factors) {\r\n  let b = false;\r\n  Object.keys(factors).every((f) => {\r\n    if (f != \"timeStamp\") {\r\n      if (f == \"salary\") {\r\n        b = true;\r\n        return true;\r\n      } else if (f != \"address\" && factors[f]) {\r\n        b = false;\r\n        return false;\r\n      } else if (f == \"address\") {\r\n        Object.keys(factors[f]).every((element) => {\r\n          if (factors[f][element]) {\r\n            b = false;\r\n            return false;\r\n          }\r\n        });\r\n      }\r\n    }\r\n  });\r\n  return b;\r\n}\r\n\r\nfunction filterResults(data, factors) {\r\n  let result = [];\r\n  result = Object.values(data).filter((d) => satisfiesFactors(d, factors));\r\n  return result;\r\n}\r\n"],"file":"utilFunctions.js"}
{"version":3,"sources":["../../server/app.js"],"names":["FirebaseStore","require","session","app","sess","name","store","database","ref","secret","resave","saveUninitialized","cookie","sameSite","secure","httpOnly","maxAge","use","origin","credentials","express","json","urlencoded","extended","path","join","__dirname","req","res","next","header","indexRouter","err","locals","message","error","get","status","send","module","exports"],"mappings":"aAAA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,iD,+FAHA,IAAMA,aAAa,GAAGC,OAAO,CAAC,0BAAD,CAAP,CAAoCC,0BAApC,CAAtB;;AAKA,IAAIC,GAAG,GAAG,0BAAV;;AAEA,IAAIC,IAAI,GAAG;AACTC,EAAAA,IAAI,EAAE,WADG;AAETC,EAAAA,KAAK,EAAE,IAAIN,aAAJ,CAAkB;AACvBO,IAAAA,QAAQ,EAAEC,kBAAID,QAAJ,EADa,EAAlB,CAFE;;AAKTE,EAAAA,MAAM,EAAE,YALC;AAMTC,EAAAA,MAAM,EAAE,IANC;AAOTC,EAAAA,iBAAiB,EAAE,KAPV;AAQTC,EAAAA,MAAM,EAAE,EAAEC,QAAQ,EAAE,MAAZ,EAAoBC,MAAM,EAAE,KAA5B,EAAmCC,QAAQ,EAAE,KAA7C,EAAoDC,MAAM,EAAE,MAA5D,EARC,EAAX;;;AAWAb,GAAG,CAACc,GAAJ,CAAQ,sBAAK,EAAEC,MAAM,EAAE,IAAV,EAAgBC,WAAW,EAAE,IAA7B,EAAL,CAAR;AACAhB,GAAG,CAACc,GAAJ,CAAQ,wBAAO,KAAP,CAAR;AACAd,GAAG,CAACc,GAAJ,CAAQG,oBAAQC,IAAR,EAAR;AACAlB,GAAG,CAACc,GAAJ,CAAQG,oBAAQE,UAAR,CAAmB,EAAEC,QAAQ,EAAE,KAAZ,EAAnB,CAAR;AACApB,GAAG,CAACc,GAAJ,CAAQ,gCAAQb,IAAR,CAAR;;AAEAD,GAAG,CAACc,GAAJ,CAAQG,8BAAeI,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,WAArB,CAAf,CAAR;AACAvB,GAAG,CAACc,GAAJ,CAAQ,UAACU,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1BD,EAAAA,GAAG,CAACE,MAAJ,CAAW,eAAX,EAA4B,SAA5B;AACAD,EAAAA,IAAI;AACL,CAHD;;AAKA1B,GAAG,CAACc,GAAJ,CAAQ,GAAR,EAAac,iBAAb;;AAEA;AACA5B,GAAG,CAACc,GAAJ,CAAQ,UAAUU,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAChCA,EAAAA,IAAI,CAAC,4BAAY,GAAZ,CAAD,CAAJ;AACD,CAFD;;AAIA;AACA1B,GAAG,CAACc,GAAJ,CAAQ,UAAUe,GAAV,EAAeL,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+B;AACrC;AACAD,EAAAA,GAAG,CAACK,MAAJ,CAAWC,OAAX,GAAqBF,GAAG,CAACE,OAAzB;AACAN,EAAAA,GAAG,CAACK,MAAJ,CAAWE,KAAX,GAAmBR,GAAG,CAACxB,GAAJ,CAAQiC,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCJ,GAAvC,GAA6C,EAAhE;;AAEA;AACAJ,EAAAA,GAAG,CAACS,MAAJ,CAAWL,GAAG,CAACK,MAAJ,IAAc,GAAzB;AACAT,EAAAA,GAAG,CAACU,IAAJ,CAASN,GAAG,CAACE,OAAb;AACD,CARD;;AAUAK,MAAM,CAACC,OAAP,GAAiBrC,GAAjB","sourcesContent":["import createError from \"http-errors\";\r\nimport express from \"express\";\r\nimport session from \"express-session\";\r\nimport path from \"path\";\r\nimport logger from \"morgan\";\r\nimport cors from \"cors\";\r\nconst FirebaseStore = require(\"connect-session-firebase\")(session);\r\n\r\nimport indexRouter from \"./routes/index\";\r\nimport { ref } from \"./db/dbConnection\";\r\n\r\nvar app = express();\r\n\r\nlet sess = {\r\n  name: \"__session\",\r\n  store: new FirebaseStore({\r\n    database: ref.database(),\r\n  }),\r\n  secret: \"price work\",\r\n  resave: true,\r\n  saveUninitialized: false,\r\n  cookie: { sameSite: \"none\", secure: false, httpOnly: false, maxAge: 900000 },\r\n};\r\n\r\napp.use(cors({ origin: true, credentials: true }));\r\napp.use(logger(\"dev\"));\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: false }));\r\napp.use(session(sess));\r\n\r\napp.use(express.static(path.join(__dirname, \"../public\")));\r\napp.use((req, res, next) => {\r\n  res.header(\"Cache-Control\", \"private\");\r\n  next();\r\n});\r\n\r\napp.use(\"/\", indexRouter);\r\n\r\n// catch 404 and forward to error handler\r\napp.use(function (req, res, next) {\r\n  next(createError(404));\r\n});\r\n\r\n// error handler\r\napp.use(function (err, req, res, next) {\r\n  // set locals, only providing error in development\r\n  res.locals.message = err.message;\r\n  res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\r\n\r\n  // render the error page\r\n  res.status(err.status || 500);\r\n  res.send(err.message);\r\n});\r\n\r\nmodule.exports = app;\r\n"],"file":"app.js"}
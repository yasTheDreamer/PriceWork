{"version":3,"sources":["../../../server/repositories/UserRepositoryImpl.js"],"names":["UserRepositoryImpl","user","userToUpdate","key","res","data","updatedRecord","UserRepository"],"mappings":"qdAAA;AACA,8C;;;;;;;;AAQMA,kB;AACJ,gCAAc;;AAEb,G;;AAEMC,IAAAA,I,EAAM;AACX,UAAMC,YAAY,GAAG,+BAAcD,IAAd,CAArB;AACA,aAAOC,YAAY,CAACC,GAApB;AACD,K;;AAEOC,IAAAA,G,EAAK;AACX,gCAASA,GAAT;AACD,K;;AAEMD,IAAAA,G,EAAK;AACV,aAAO,8BAAaA,GAAb,CAAP;AACD,K;;AAEYA,IAAAA,G,EAAKE,I,EAAM;AACtB,UAAMC,aAAa,GAAG,8BAAaH,GAAb,EAAkBE,IAAlB,CAAtB;;AAEA,aAAOC,aAAP;AACD,K;;AAESH,IAAAA,G,EAAK;AACb,aAAO,iCAAgBA,GAAhB,CAAP;AACD,K,iCA1B8BI,2B;;;AA6BlBP,kB","sourcesContent":["import UserRepository from \"./UserRepository\";\r\nimport {\r\n  writeUserData,\r\n  readData,\r\n  recordExists,\r\n  updateRecord,\r\n  getRecordFromDB,\r\n} from \"../db/UserSchema\";\r\n\r\nclass UserRepositoryImpl extends UserRepository {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  update(user) {\r\n    const userToUpdate = writeUserData(user);\r\n    return userToUpdate.key;\r\n  }\r\n\r\n  findAll(res) {\r\n    readData(res);\r\n  }\r\n\r\n  exists(key) {\r\n    return recordExists(key);\r\n  }\r\n\r\n  updateRecord(key, data) {\r\n    const updatedRecord = updateRecord(key, data);\r\n\r\n    return updatedRecord;\r\n  }\r\n\r\n  getRecord(key) {\r\n    return getRecordFromDB(key);\r\n  }\r\n}\r\n\r\nexport default UserRepositoryImpl;\r\n"],"file":"UserRepositoryImpl.js"}
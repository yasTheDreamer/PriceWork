{"version":3,"sources":["../../../server/services/UserService.js"],"names":["UserService","TypeError","saveUser","Error","getAllData","recordExists","updateRecord","getRecord"],"mappings":"gQAAMA,W;AACJ,uBAAc;AACZ,MAAI,8DAAeA,WAAnB;AACE,QAAM,IAAIC,SAAJ,CAAc,0CAAd,CAAN;;AAEF,MAAI,CAAC,KAAKC,QAAV;AACE,QAAM,IAAIC,KAAJ,CAAU,uCAAV,CAAN;;AAEF,MAAI,CAAC,KAAKC,UAAV;AACE,QAAM,IAAID,KAAJ,CAAU,yCAAV,CAAN;;AAEF,MAAI,CAAC,KAAKE,YAAV;AACE,QAAM,IAAIF,KAAJ,CAAU,2CAAV,CAAN;AACF,MAAI,CAAC,KAAKG,YAAV;AACE,QAAM,IAAIH,KAAJ,CAAU,2CAAV,CAAN;AACF,MAAI,CAAC,KAAKI,SAAV;AACE,QAAM,IAAIJ,KAAJ,CAAU,wCAAV,CAAN;AACH,C;;;AAGYH,W","sourcesContent":["class UserService {\r\n  constructor() {\r\n    if (new.target === UserService)\r\n      throw new TypeError(\"Cannot instantiate UserService Interface\");\r\n\r\n    if (!this.saveUser)\r\n      throw new Error(\"Have to implement the saveUser method\");\r\n\r\n    if (!this.getAllData)\r\n      throw new Error(\"Have to implement the getAllData method\");\r\n\r\n    if (!this.recordExists)\r\n      throw new Error(\"Have to implement the recordExists method\");\r\n    if (!this.updateRecord)\r\n      throw new Error(\"Have to implement the updateRecord method\");\r\n    if (!this.getRecord)\r\n      throw new Error(\"Have to implement the getRecord method\");\r\n  }\r\n}\r\n\r\nexport default UserService;\r\n"],"file":"UserService.js"}